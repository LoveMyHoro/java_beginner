这部分内容主要是关于springboot的自动配置原理
一.自动配置原理定义
    1.定义：自动配置是基于条件的配置机制，通过条件化注解和反射，简化 Spring 应用的配置过程。遵循约定大于配置的原则，
    在boot程序启动后，起步依赖中的一些bean对象会自动注入到ioc容器

    2.引入知识：META-INF 文件夹
        META-INF 文件夹在 Java 项目中，尤其是 Spring Boot 项目中，具有重要的作用。具体来说，它用于存放一些元数据和配置文件，
        以下是 META-INF 文件夹主要的几个功能：
        (注意：以前自动配置类的路径所在的配置文件是.facfactories,现在是.imports)
        (1)资源定位：
            META-INF 是 Java 规范中规定的一个特殊目录，Java 的类加载器会在这个目录中查找资源文件。它通常用于存放一些跟 Java
            应用相关的重要配置。比如pom文件的起步依赖要导入的自动配置类的地址，利用Bean注册方法中ImportSelector导入配置类
        (2)Spring Factory 文件：
            在 Spring Boot 中，META-INF 目录中的 spring.factories 文件列出了所有的自动配置类(@EnableAutoConfiguration),
            是自动配置功能的核心组件。这个文件把每个自动配置类以及它们的条件化注解映射在一起，Spring Boot 会从这个文件中加载并
            应用相关的自动配置。
        (3)Java EE 相关配置：
            在 Java EE 应用中，常常会将一些配置文件放置在 META-INF 中，例如 persistence.xml 用于 JPA 配置，或其他特定于容器
            的配置文件。
        (4)服务加载：
            META-INF/services 目录可以用于服务提供者接口（SPI）机制，它允许开发者在多个实现类之间进行选择。当使用
            ServiceLoader 加载服务时，会查找这个目录中的文件。
        (5)其他支持文件：
            一些第三方库可能会在 META-INF 中存放元数据或配置文件，用于扩展框架的功能或提供必要的插件支持。
    3.主要组成部分：
        注意：以前自动配置类所在的配置文件是.facfactories,现在是.imports
        (1)@EnableAutoConfiguration：这是springboot的核心配置类，启用自动配置功能。
            在 Spring Boot 应用的主类上通常会添加这个注解。它启用自动配置功能，并告诉 Spring Boot
            从 META-INF/spring.factories 文件中加载自动配置类。这里面包括各个配置类所在的地址。类似于Bean注册

        (2)spring.factories：列出所有可用的自动配置类。
        (3)条件化注解：用 @Conditional 的变体判断是否创建特定的 bean。
        (4)@Configuration：自动配置类被标记为配置类。
        原则：采用约定优于配置的原则，提供默认配置，允许通过 application.properties 或 application.yml 进行定制。

        示例：例如，使用 HikariCP 时，应用会自动配置 DataSource bean。
    4..相关补充
        (1)程序引入springboot-boot-starter-web起步依赖，启动后，会自动往ioc容器中注入DispatcherServlet的实例
