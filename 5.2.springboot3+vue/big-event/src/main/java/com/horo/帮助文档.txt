一.用户模块的注意点

    1. 使用拦截器拦截未携带token的请求，但登录和注册请求除外。实现步骤：
        (1)配置类
        (2)实现HandlerInterceptor接口，重写方法
    2. 在拦截器中利用ThreadLocal存储用户ID，避免在方法中解析token来获取ID，从ThreadLocal直接获取即可，
        这样后续获取用户信息时也无需传递token。但是要在会话结束后清除ThreadLocal中的内容，防止内存泄露

    3.实体类属性上的@NotNull等注解要搭配@Validated注解使用。@Validated注解使用在结束的实体类参数前
    这些注解可以为实体类做参数校验


    4.@URL注解可以校验参数是否是url

二.文章分类模块
    1.分组校验：把校验项进行归类分组，在完成不同功能的时候，校验指定组中的校验项
        (1)定义分组：在实体类内部定义接口
        (2)定义校验项时指定归属的分组：通过实体类的注解里的group属性指定分组
        (3)校验时指定要校验的分组：给@Validated注解的value属性赋值
        注意：定义校验项时如果没有指定分组，则默认属于Default分组，分组可以继承。通常的做法是，继承Default分组，然后将各种的校验
        放到各种的分组

三.文章管理相关接口
    1.自定义校验步骤：
        (1)自定义注解State
        (2)自定义校验数据的类StateValidation实现ConstraintValidation接口
        (3)在需要校验的地方使用自定义注解
    具体的过程见anno自定义注解包和提供校验功能的validation包内的类

    2.分页查询：具体见article的方法


四.文件上传
    (1)导入阿里 OSS 依赖包
    在项目中，为了实现文件上传至阿里云对象存储服务（OSS），首先需要导入相应的阿里 OSS 依赖包。
    这一步骤是后续创建工具类以及进行文件上传操作的基础。通过添加特定的依赖，可以让项目具备与阿里云 OSS 进行交互的能力。
    (2)创建阿里 OSS 工具类并进行详细配置
    接下来，创建一个专门用于与阿里 OSS 进行交互的工具类。这个工具类将封装一系列的方法，以便在项目的不同部分方便地进行
    文件上传、下载、删除等操作。在创建工具类的过程中，需要进行相应的配置，包括设置访问密钥、访问密钥 ID、存储空间名称、存储区域
    等重要参数。这些配置将确保工具类能够正确地连接到阿里云 OSS，并进行有效的文件操作。
    (3)调用工具类

五.redis优化

    1.令牌主动失效机制
        (1)登陆成功后，给浏览器相应令牌的同时，把该令牌存储到redis中
        (2)在LoginInterceptor拦截器中，需要验证浏览器携带的令牌，并同时需要获取redis中存储的与之相同的令牌
        (3)当用户修改密码成功后，删除redis中存储的旧令牌

    2.实现步骤
        (1)导入spring-boot-starter-data-redis起步依赖
        (2)在yaml文件这，配置redis连接信息
        (3)调用API（StringRedisTemplate）,完成字符串的存取操作,并为数据添加过期时间

    3.注意：
        (1)要使用redis服务还要先点击redis-server.exe文件，启动redis

六.项目打包后的参数修改(利用maven的package将项目打包成jar包)
    方案1.cmd命令行配置属性参数
        (1)例如：java -jar big-event-1.0-SNAPSHOT.jar --server.port=9999
            就是更改了jar包的端口号，不需要配置yaml文件重新打包
    方案2.利用yaml文件配置：创建一个yaml文件与jar包放在同一目录下，再在yaml文件下修改配置。运行jar包时会自动读取yaml文件

    方案2的优先级高于方案1

七.多环境开发
    1.通过多个yaml文件分别配置不同环境的属性
    2.文件的名称为application-环境名称.yaml
    3.在application.yaml中激活环境





