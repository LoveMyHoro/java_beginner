这里的主要是客户端向服务端发送数据，springmvc接收参数的知识。
springMVC默认接收的参数是param参数。若要接收其他参数，需要添加注解
一.param传参
    1.注意：参数类型需要是包装类，即int->integer
    2.接收参数方式
        (1)直接接收：形参列表填写对于名称的参数即可。请求参数名=形参参数名即可(可以不传递，不报错)
        (2)注解指定：利用@RequestParam注解接收参数
            value:指定请求的参数名。如果形参名和请求参数名一致，可以省略
            required:前端是否必须传递此参数。默认是必须的
            defaultValue:当是非必须传递时的默认值
        (3)特殊值接值：一名多值
            当接收同一参数的多个值，比如param=1&param=2&...时，就要用集合接收List<Integer>param,且必须加@RequestParam注解
        (4)重点：利用实体类接收数据
            直接利用实体类作为形参接值，实体类的属性名要等于传入的参数名

    3.路径传参
        动态路径设计: /参数名/{动态部分}/{动态部分} 动态部分使用{}包含即可! {}内部动态标识!
          形参列表取值: @PathVariable  如果形参名 = {动态标识} 自动赋值!
          @PathVariable("动态标识") 如果形参名 != {动态标识} 可以通过指定动态标识赋值!
          访问测试:  /param/1/root  -> id = 1  uname = root

二.JSON传参（不要忘了@RequestBody注解）
    1.由于原生java不支持json,所以要做两件事
        (1)导入json处理的依赖
        (2)handlerAdapter配置json转换器
            @EnableWebMvc  为配置类添加json处理器。这个标签不仅会为配置类添加json处理器，
            还可以向ioc容器在加入HandlerMapping(秘书)和HandlerAdapter(经理)
    2.注意：在控制器中，默认接收参数方式为param。使用 `@RequestBody` 注解来接收 JSON 数据，并将其转换为 Java 对象
        例如：public String addPerson(@RequestBody Person person)

三.获取cookie或请求头
    1.获取cookie：利用@CookieValue注解
        例如public String data(@CookieValue(value = "cookieName")String value)
    2.获取请求头：利用@RequestHeader注解
        例如public String data(@RequestHeader("Host") String host)
四.原生api
    1.如果想要获取请求或者响应对象,或者会话等,可以直接在形参列表传入,并且不分先后顺序!
    注意: 接收原生对象,并不影响参数接收!如 HttpServletRequest和HttpSession等原生api
    2.获取ServletContext
        1.ServletContext是Servlet最大的共享域。是实现 servlet 之间共享信息和管理应用级别资源的一个重要工具。
        2.获取方法
            (1)ServletContext会自动装入ioc容器，可通过@Autowired注解自动装配
            (2)利用request和session的方法获取




