package test_5_Object_Clone;

public class Api_Clone {
    /*
    1.使用时必须要重写.且必须实现Cloneable方法
    （1）这里稍微讲一下其实Clone是protect的方法，protect修饰的类的方法不能在包外（Object在lang包中）子类中直接调用，需要重写
    （2）Cloneable接口中没有任何抽象方法。如果一个接口没有抽象方法，表明当前接口是一个标记性的接口。现在Cloneable表示一旦实现了。
    （3）调用父类中的Clone方法，相当于让java中的Object类帮我们克隆了一个对象，并把克隆之后的对象放回回去
    （4）由于Clone是Object的方法，所以返回的是Object类型。需要强转成需要的类型
    那么当前类的对象就可以被克隆。如果没有实现Cloneable接口，那么当前类就不可以被克隆
    2.使用小结：
    （1）重写Object中的clone方法
    （2）让javabean类实现Cloneable接口
    （3）创建原对象并调用clone方法
    3.浅克隆：
   （1） 把a对象的属性值完全拷贝给b对象。也叫对象拷贝，对象复制
   （2） 基本数据类型直接拷贝变量的数据值。引用数据类型他会直接拷贝变量记录的地址值

   4.深克隆：
   对于引用数据类型会开辟新的空间，字符串会复用
   Object是浅克隆。如果想实现深克隆需要重写或者利用别人写好的第三方代码


   5.拓展：
   在实际开发过程中，我们通常使用第三方工具（别人写好的代码）gson实现深拷贝
   步骤：
   （1）将写好的第三方代码导入到项目中
   （2）编写代码



     */
}
