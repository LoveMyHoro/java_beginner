import test_5.Animal;
import test_5.Dog;

public class 面向对象进阶_5_多态 {
    //面向对象三大特征：封装，继承，多态
    //1.多态简介：同类型的对象，表现出不同的形态
    //2.多态的表现形式：
    //父类类型 对象名称=子类名称
    //3.多态的前提
    //（1）有继承关系
    //（2）有父类引用指向子类对象：父类类型 对象名称=子类名称()
    //（3）有方法重写

    //4.多态调用成员的特点
    //变量调用：编译看左边，运行也看左边
    //（1）编译看左边：java编译代码的时候，会看左边的父类中有没有这个变量，如果有，编译成功，如果没有，则编译失败
    //（2）运行也看左边：java运行代码的时候，实际获取的是左边父类中成员变量的值
    //方法调用：编译看左边，运行看右边
    //（1）编译看左边：java编译代码的时候，会看左边的父类中有没有这个方法，如果有，编译成功，如果没有，则编译失败
    //（2）java运行代码时，实际上运行的是子类的方法
    //Animal a=new Dog();
    //理解：现在是用a去调用方法的，，而a是animal类型的，所以默认都会从animal类型中找
    //多态的成员变量：由于是父类生成的所以调用的是父类的
    //多态的成员方法：由于父类new的是子类，而且虚方法表上，子类继承时会覆盖父类，所以调用的是子类的方法

}
