1.相对路径
    以当前路径为出发点去寻找目标资源
    语法：不以/开头
          ./表示当前资源路径
          ../表示当前资源的上一层路径
    注意：
        (1)"../"表示向上走一层，有多个"../"表示向上走多层
        (2)在请求转发中，要注意是以谁为基准判断相对路径。因为在请求转发中，搜索栏中的url没有变化，还是跳转前的地址
    缺点：目标资源路径受到当前资源路径的影响，不同的位置，相对路径写法不同

2.绝对路径
    始终以固定的路径作为出发点去找目标资源 和当前资源所在路径没有关系
    语法：以/开头(固定的路径出发点为会替换掉斜线)
        不同的项目中，固定的路径出发点可能不一样，在本项目中，固定的路径出发点为http://localhost:8080/

    优点：目标资源路径的写法不会受到当前资源路径的影响，不同的位置绝对路径写法一致
    缺点：绝对路径要补充项目的上下文
    解决方法1：通过head>base>href属性，定义相对路径的公共前缀，通过公共前缀把一个相对路径变为绝对路径
    解决方法2：直接在部署时把上下文路径删除，只留下斜线